@model RealtyInvest.DataModel.ViewModels.Manage.RealtyManageViewModel

@{
    ViewBag.Title = "Edit real estate";
    Layout = "~/Views/InvestorManage/Index.cshtml";
}
@section scripts
{
    <script src="https://maps.googleapis.com/maps/api/js"></script>
    <script type="text/javascript">
        angular.module('RealtyInvest.App').constant("editEstateConfig", {
            "url": "http://localhost",
        });
    </script>
    @Scripts.Render("~/bundles/admin-editestate")
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditEstate", "InvestorManage", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" ng-controller="EditEstateCtrl">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Square, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Square, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Square, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes : new { @class = "form-control description"  })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PictureUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" ng-init="pictureUrl = '@Model.PictureUrl'">
                <input class="form-control text-box single-line valid"
                       id="PictureUrl"
                       name="@Html.NameFor(model => model.PictureUrl)"   
                       ng-model="pictureUrl" 
                       type="text" aria-invalid="false">
                @Html.ValidationMessageFor(model => model.PictureUrl, "", new {@class = "text-danger"})
                <img ng-src="{{pictureUrl}}" alt="Preview" class="img-thumbnail" style="width: 200px; height: 200px;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location.Country, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <select ng-change="chooseCountry()" ng-init="initCountres(); country = '@Html.ValueFor(model => model.Location.Country)'" ng-model="country" name="@Html.NameFor(model => model.Location.Country)">
                    <option ng-repeat="item in countryList | orderBy:item">{{item}}</option>
                </select>
                @Html.ValidationMessageFor(model => model.Location.Country, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select ng-change="chooseCity()" ng-model="city" ng-init="city = '@Html.ValueFor(model => model.Location.City)' " name="@Html.NameFor(model => model.Location.City)">
                    <option ng-repeat="item in citiesList | orderBy:item">{{item}}</option>
                </select>
                @Html.ValidationMessageFor(model => model.Location.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="hidden" name="@Html.NameFor(model => model.Location.Latitude)" value="{{Latitude}}" ng-init="Latitude=@Html.ValueFor(model => model.Location.Latitude)"/>
            <input type="hidden" name="@Html.NameFor(model => model.Location.Longatude)" value="{{Longatude}}" ng-init="Longatude=@Html.ValueFor(model => model.Location.Longatude)"/>

            <div class="col-md-10">
                <div id="map" style="height:250px;"></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
